name: Deploy to AWS with Terraform

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Build backend Lambda package
        run: |
          cd backend
          pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt -t package/ \
            --platform manylinux2014_x86_64 \
            --only-binary=:all: \
            --implementation cp \
            --python-version 3.10 \
            --abi cp310
          cp -r src package/
          cd package
          zip -r ../backend-lambda.zip .
          cd ..
          echo "REMINDER: Set Lambda handler to src.main.handler in AWS Console."

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Build frontend
        working-directory: ./frontend
        env:
          VITE_API_BASE: 'https://r9aa5u91x5.execute-api.us-east-2.amazonaws.com'
        run: |
          npm install
          npm run build
      
      - name: Upload frontend to S3
        run: |
          aws s3 cp frontend/dist/ s3://lalitha-terraform-20240703-unique/ --recursive

      - name: Set Lambda environment variables
        run: |
          echo "DATABASE=postgresql://formuser:lalithaAWSpassword123@formdb.cv84o8iymmz6.us-east-2.rds.amazonaws.com:5432/formdb" >> $GITHUB_ENV

      - name: Upload backend to Lambda
        env:
          DATABASE: ${{ env.DATABASE }}
        run: |
          aws lambda update-function-code --function-name form-backend-api --zip-file fileb://backend/backend-lambda.zip

          # Wait for the update to finish
          for i in {1..10}; do
            STATUS=$(aws lambda get-function-configuration --function-name form-backend-api --query 'LastUpdateStatus' --output text)
            echo "Lambda update status: $STATUS"
            if [ "$STATUS" = "Successful" ]; then
              break
            elif [ "$STATUS" = "Failed" ]; then
              echo "Lambda update failed!"
              exit 1
            fi
            sleep 5
          done

          aws lambda update-function-configuration --function-name form-backend-api --environment "Variables={DATABASE=\"$DATABASE\"}"

    